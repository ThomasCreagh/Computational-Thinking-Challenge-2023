from itertools import combinations
lst = [125, 153, 155, 160, 184, 185, 189, 192, 196, 198, 200, 203, 205, 206, 207, 209, 210, 217, 222, 224, 228, 231, 234, 240, 243, 245, 248, 249, 250, 252, 255, 256, 260, 261, 264, 267, 268, 270, 272, 273, 275, 276, 279, 280, 286, 289, 294, 295, 296, 297, 299, 300, 301, 304, 308, 309, 310, 312, 315, 320, 322, 324, 330, 335, 336, 338, 340, 341, 344, 345, 348, 350, 351, 352, 356, 357, 360, 364, 365, 368, 370, 372, 374, 375, 376, 377, 380, 384, 387, 390, 391, 392, 395, 396, 399, 400, 402, 403, 405, 406, 407, 408, 414, 420, 423, 425, 429, 430, 432, 434, 435, 436, 437, 440, 441, 444, 448, 450, 455, 456, 460, 462, 464, 465, 468, 470, 473, 475, 476, 480, 483, 484, 485, 486, 490, 493, 495, 496, 500, 504, 506, 507, 510, 512, 513, 516, 517, 520, 522, 524, 525, 527, 528, 533, 536, 539, 540, 544, 546, 552, 555, 556, 558, 560, 561, 568, 570, 572, 574, 576, 580, 585, 588, 589, 592, 594, 595, 600, 602, 603, 608, 609, 611, 612, 615, 616, 620, 621, 624, 627, 630, 638, 639, 640, 644, 645, 646, 648, 650, 651, 656, 658, 660, 663, 664, 665, 666, 672, 675, 676, 680, 682, 684, 686, 688, 690, 693, 696, 697, 700, 703, 704, 705, 708, 710, 711, 713, 714, 715, 720, 725, 726, 728, 729, 735, 736, 737, 738, 740, 741, 744, 748, 750, 752, 754, 756, 759, 760, 765, 768, 770, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 792, 795, 798, 800, 801, 804, 805, 806, 810, 812, 814, 816, 819, 820, 824, 825, 828, 832, 834, 836, 837, 840, 845, 846, 848, 850, 851, 855, 858, 860, 861, 864, 868, 869, 870, 871, 874, 875, 880, 882, 884, 888, 890, 891, 893, 896, 897, 899, 900, 901, 902, 903, 910, 912, 917, 918, 920, 924, 925, 927, 928, 930, 936, 940, 943, 945, 946, 950, 952, 954, 957, 960, 962, 966, 968, 969, 970, 972, 975, 980, 984, 986, 987, 988, 989, 990, 992, 994, 996, 999, 1000, 1001, 1003, 1005, 1007, 1008, 1012, 1014, 1020, 1023, 1025, 1026, 1029, 1032, 1034, 1036, 1040, 1044, 1050, 1054, 1056, 1060, 1064, 1065, 1066, 1067, 1068, 1071, 1075, 1078, 1080, 1085, 1088, 1089, 1092, 1100, 1102, 1104, 1105, 1106, 1107, 1110, 1113, 1116, 1120, 1122, 1125, 1127, 1128, 1131, 1134, 1136, 1140, 1144, 1147, 1148, 1150, 1152, 1155, 1156, 1160, 1161, 1164, 1166, 1168, 1170, 1173, 1175, 1176, 1178, 1180, 1183, 1184, 1188, 1189, 1190, 1196, 1197, 1200, 1206, 1209, 1210, 1216, 1218, 1219, 1221, 1224, 1230, 1232, 1236, 1240, 1242, 1248, 1250, 1251, 1254, 1258, 1260, 1271, 1272, 1274, 1275, 1276, 1278, 1280, 1287, 1290, 1292, 1295, 1296, 1300, 1302, 1308, 1310, 1311, 1312, 1316, 1320, 1323, 1325, 1326, 1330, 1332, 1333, 1334, 1335, 1339, 1340, 1344, 1350, 1352, 1353, 1358, 1360, 1363, 1364, 1365, 1368, 1372, 1375, 1376, 1377, 1378, 1380, 1386, 1392, 1394, 1400, 1404, 1406, 1407, 1408, 1410, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1425, 1428, 1430, 1431, 1435, 1440, 1449, 1450, 1452, 1455, 1456, 1457, 1458, 1460, 1462, 1463, 1470, 1472, 1475, 1476, 1480, 1482, 1484, 1485, 1488, 1491, 1495, 1496, 1500, 1504, 1505, 1508, 1512, 1517, 1518, 1519, 1520, 1521, 1529, 1530, 1534, 1536, 1537, 1539, 1540, 1547, 1548, 1550, 1551, 1554, 1558, 1560, 1564, 1566, 1568, 1572, 1575, 1580, 1584, 1590, 1591, 1593, 1596, 1598, 1599, 1600, 1602, 1608, 1610, 1612, 1615, 1620, 1624, 1628, 1632, 1634, 1638, 1640, 1643, 1645, 1650, 1652, 1653, 1656, 1664, 1666, 1668, 1672, 1674, 1677, 1680, 1683, 1690, 1692, 1694, 1696, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1710, 1711, 1715, 1716, 1720, 1722, 1725, 1728, 1734, 1736, 1739, 1740, 1749, 1750, 1755, 1760, 1763, 1764, 1768, 1769, 1770, 1771, 1776, 1780, 1782, 1785, 1786, 1792, 1794, 1798, 1800, 1802, 1804, 1806, 1809, 1813, 1815, 1820, 1824, 1826, 1829, 1830, 1833, 1836, 1840, 1845, 1846, 1848, 1850, 1854, 1855, 1856, 1859, 1860, 1862, 1870, 1872, 1875, 1876, 1880, 1881, 1886, 1887, 1888, 1890, 1891, 1892, 1898, 1900, 1904, 1908, 1911, 1914, 1917, 1920, 1925, 1932, 1935, 1936, 1938, 1940, 1944, 1947, 1950, 1952, 1953, 1955, 1957, 1960, 1961, 1962, 1965, 1968, 1974, 1975, 1976, 1978, 1980, 1984, 1988, 1989, 1992, 1995, 2000, 2001, 2002, 2006, 2009, 2010, 2013, 2014, 2016, 2021]

# TODO: Check if other start lists go to the same end list

print(lst, round(sum([1/i for i in lst]), 14), len(lst))

while True:
    done = True

    for x in lst:
    #     # 1 fraction -> 2 fractions [All possible fractions]
    #     count = 0
    #     for combo in combinations(range(x, 2024), 2):
    #         if round(sum([1/i for i in list(combo)]), 14) == round(1/x, 14):
    #             if (combo[0] < 2024 and combo[1] < 2024
    #                     and (combo[0] not in lst and combo[1] not in lst)):
    #                 lst.remove(x)
    #                 lst.append(combo[0])
    #                 lst.append(combo[1])
    #                 lst.sort()
    #                 print()
    #                 print(lst, round(sum([1/i for i in lst]), 14), len(lst))
    #                 done = False
    #                 break
    #         count += 1
    #     print(f"{count} ", end="")

        # 1 fraction -> 3 fractions [All possible fractions]
        count = 0
        for combo in combinations(range(x, 2024), 3):
            if round(sum([1/i for i in list(combo)]), 14) == round(1/x, 14):
                if (combo[0] < 2024 and combo[1] < 2024
                        and (combo[0] not in lst
                             and combo[1] not in lst
                             and combo[2] not in lst)):
                    lst.remove(x)
                    lst.append(combo[0])
                    lst.append(combo[1])
                    lst.append(combo[2])
                    lst.sort()
                    print()
                    print(lst, round(sum([1/i for i in lst]), 14), len(lst))
                    done = False
                    break
            count += 1
        print(f"{count} ", end="")

        # 2 fraction -> 2 fractions [All possible fractions]

    #     count = 0
    #     for list_combo in lst:
    #         for combo in combinations(range(min(x, list_combo), 2024), 2):
    #             if (list_combo != x
    #                     and (round(sum([1/i for i in list(combo)]), 14)
    #                          == round((1/x)+(1/list_combo), 14))
    #                     and (combo[0] not in lst and combo[1] not in lst)
    #                     and combo[0] < 2024 and combo[1] < 2024):
    #                 try:
    #                     lst.remove(x)
    #                     lst.remove(list_combo)
    #                     lst.append(combo[0])
    #                     lst.append(combo[1])
    #                     lst.sort()
    #                     print()
    #                     print(lst, round(sum([1/i for i in lst]), 14), len(lst))
    #                     done = False
    #                     break
    #                 except ValueError:
    #                     print("not in list")
    #                     break
    #         count += 1
    #     print(f"{count} ", end="")
    # if done:
    #     break

    # print(lst, round(sum([1/i for i in lst]), 14), len(lst))
